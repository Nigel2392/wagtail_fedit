{{ define "feature_template" }}
    <style>
        .navbar-search-menu {
            display: flex;
            flex-direction: column;
            margin: 0;
            padding: 0;
            list-style: none;
        }
        .navbar-search-wrapper {
            display: flex;
            flex-direction: row;
            align-items: center;
            margin: 5px 10px;
            border-radius: 0.5rem;
            border: 1px solid #ccc;
        }
        .navbar-search-wrapper > svg {
            width: 35px;
            height: 35px;
            padding-top: 5px;
            padding-left: 10px;
            padding-bottom: 5px;
            margin-right: 5px;
            fill: currentColor;
        }
        .navbar-search-wrapper .navbar-search-input {
            border: none;
            background: none;
            color: inherit;
            font-size: 1rem;
            margin: 0;
            width: 100%;
            outline: none;
            height: 40px;
        }
        @media screen and (min-width: 320px) {
            #navbar .navbar-search-menu {
                display: none;
            }
            #navbar.open .navbar-search-menu {
                display: flex;
            }
        }
        @media screen and (min-width: 1200px) {
            #navbar .navbar-search-menu {
                display: flex;
            }
            #navbar .navbar-search-input {
                display: inline-block;
            }
        }
    </style>
    <ul class="navbar-search-menu" id="navbar-search">
        <li class="navbar-search-wrapper">
            {{ Icon "search" }}
            <input class="navbar-search-input" type="text" placeholder="Search..." />
        </li>
    </ul>
    {{ encodeZipped .FlatObjectList "root_data" }}
    <script src="https://cdn.jsdelivr.net/npm/minisearch@6.3.0/dist/umd/index.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pako/2.1.0/pako.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        function decodeBase64(s) {
            var e={},i,b=0,c,x,l=0,a,r='',w=String.fromCharCode,L=s.length;
            var A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            for(i=0;i<64;i++){e[A.charAt(i)]=i;}
            for(x=0;x<L;x++){
                c=e[s.charAt(x)];b=(b<<6)+c;l+=6;
                while(l>=8){((a=(b>>>(l-=8))&0xff)||(x<(L-2)))&&(r+=w(a));}
            }
            return r;
        };
        document.addEventListener('DOMContentLoaded', async function() {
            let data = document.getElementById('root_data').textContent;
            // 1. Decode base64 (convert ascii to binary)
            // 2. binary string to character-number array
            // 3. Turn number array into byte-array
            // 4. inflate the byte-array
            // 5. convert byte-array to string
            // 6. parse JSON
            data     = atob(data);
            data     = data.split('').map(function(x){return x.charCodeAt(0);});
            data     = new Uint8Array(data);
            data     = pako.inflate(data);
            data     = String.fromCharCode.apply(null, new Uint16Array(data));
            data     =  JSON.parse(data);
            
            const searchInput = document.querySelector('.navbar-search-input');
            const miniSearch = new MiniSearch({
                fields: ['title', 'content'],
                storeFields: ['title', 'content', 'url'],
                idField: 'url',
                searchOptions: {
                    boost: { title: 2, url: 1 }
                },
            });

            miniSearch.addAll(data);

            const searchResults = document.createElement('ul');
            searchResults.innerHTML = '';
            searchResults.classList.add('navbar-menu');
            const navbarSearch = document.getElementById('navbar-search');
            navbarSearch.appendChild(searchResults);
            //navbarSearch.parentNode.insertBefore(
            //    searchResults,
            //    navbarSearch.nextSibling
            //);

            searchInput.addEventListener('input', function() {
                searchResults.innerHTML = '';
                const query = searchInput.value;
                if (query === '') {
                    return;
                }
                const results = miniSearch.search(query, {
                    combineWith: 'AND',
                });
                results.forEach(function(result) {
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.href = result.url;
                    a.textContent = result.title;
                    a.classList.add('navbar-item');
                    li.appendChild(a);
                    searchResults.appendChild(li);
                });
            });
        });
    </script>
{{ end }}